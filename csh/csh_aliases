#!/bin/tcsh
set cuda_ver = "10.0"

if ( $?target ) then
    echo "$target"
else
    set target = "x86_64"
    echo 'Set target x86_64'
endif

if ($target == "aarch64") then
    set cuda_folder = "aarch64-linux"
endif
if ($target == "x86_64") then
    set cuda_folder = "."
endif

##cuda_folder=aarch64-linux, ., 
set cudnn_ver = "7.2"
set platform = "aarch64"
##platform=qnx, aarch64, aarch64-android, ARMv7-android
#set target = "aarch64"
##target=x86_64, aarch64
set user_home = "/home/scratch.${USER}_gpu"
set dit_dir = "$user_home/p4trees/sw/sw/gpgpu/MachineLearning/DIT"
set trunk_dir = "$dit_dir/trunk"
set toolkit_dir = "/home/scratch.svc_compute_arch/release/cuda_toolkit"
alias cd-trunk "cd $trunk_dir"

alias cd-bin "cd $trunk_dir/build/cuda-$cuda_ver/$cudnn_ver/$target"

alias cd-scratch "cd $user_home"

#alias ut-int8='./infer_test --gtest_filter=caskConvolutionTests.Int8'

alias make-tr "/usr/bin/make CUDA=cuda-$cuda_ver CUDNN=$cudnn_ver CUDA_INSTALL=$toolkit_dir/r$cuda_ver/latest -j 20 $target"

alias make-clean "/usr/bin/make clean"

alias srun-sc145 "srun -w computelab-145 --pty /bin/bash"

alias cpuinfo "echo 'CPU Model: '; cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c; \
    echo 'Physical ID: '; cat /proc/cpuinfo| grep 'physical id'| sort| uniq| wc -l;\
    cat /proc/cpuinfo| grep 'cpu cores'| uniq;\
    echo 'Processor: '; cat /proc/cpuinfo| grep 'processor'| wc -l;"

alias sshfs "sshfs -o reconnect -o no_check_root -o allow_other -o auto_unmount -o intr -o cache=yes -o kernel_cache -o compression=no -o large_read -o Ciphers=arcfour -F ~/.ssh/config"

alias make "/usr/bin/make"

setenv LD_LIBRARY_PATH ${dit_dir}/externals/cuda-${cuda_ver}-${platform}/${cuda_folder}/lib/
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}":${dit_dir}/externals/cudnn/$target/$cudnn_ver/cuda-${cuda_ver}/lib64/"
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}":${dit_dir}/externals/cublas-x64-linux/cuda-${cuda_ver}/"
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}":${toolkit_dir}/r${cuda_ver}/latest/lib64/"
setenv LD_LIBRARY_PATH "${LD_LIBRARY_PATH}":${trunk_dir}/build/cuda-${cuda_ver}/${cudnn_ver}/${target}/"
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}":/usr/lib/"
setenv LD_LIBRARY_PATH ${LD_LIBRARY_PATH}":/usr/lib/aarch64-linux-gnu/"

alias update-config-aarch64 "curl https://raw.githubusercontent.com/scilabtop/linux-env/master/download | tcsh /dev/stdin aarch64"
alias update-config-x86_64 "curl https://raw.githubusercontent.com/scilabtop/linux-env/master/download | tcsh /dev/stdin x86_64"
setenv JAVA_HOME "/home/utils/java/jdk1.8.0_131"
setenv PATH ${PATH}":$JAVA_HOME/bin:/usr/bin:~/bin:/home/utils/bin:/bin:/sbin"
setenv PATH ${PATH}":`pwd`:/usr/sbin:/usr/ucb:/usr/css/bin/"
setenv PATH ${PATH}":/usr/lib:/etc:/home/nv/bin:/usr/bin/X11"
setenv PATH ${PATH}":/usr/bin:/usr/local/lsf/bin"

# Get rid of redudants
setenv path `echo $PATH | sed -e 's/$/:/;s/^/:/;s/:/::/g;:a;s#\(:[^:]\{1,\}:\)\(.*\)\1#\1\2#g;ta;s/::*/:/g;s/^://;s/:$//;'`

setenv CLASSPATH .
setenv CLASSPATH ${CLASSPATH}":$JAVA_HOME/lib/dt.jar"
setenv CLASSPATH ${CLASSPATH}":$JAVA_HOME/lib/tools.jar"
setenv CLASSPATH ${CLASSPATH}":$JAVA_HOME/lib"
setenv CALSSPATH ${CLASSPATH}":$JAVA_HOME/jre/lib"

# color
set K="%{\e[0;30m%}"
set R="%{\e[0;31m%}"
set G="%{\e[0;32m%}"
set Y="%{\e[0;33m%}"
set B="%{\e[0;34m%}"
set M="%{\e[0;35m%}"
set C="%{\e[0;36m%}"
set W="%{\e[0;37m%}"
set CC="%{\e[0m%}"
            
if ( $?prompt ) then
    if ( "$uid" == "0" ) then
     set prompt = "$C%U%m%u:$G%U%n%u@$Y%C2%#$W " 
    else
     set prompt = "$C%U%m%u:$G%U%n%u@$Y%C2%#$W " 
    endif
endif

# ls color
setenv LSCOLORS ExGxFxdxCxegedabagExEx
setenv CLICOLOR yes

set autolist
set correct = cmd
alias mv 'mv -i'
alias cp 'cp -i'
alias rm 'rm -i'
alias q 'exit'
alias .. 'cd ..'
alias ds 'du -sh'
alias dh 'df -h -a -T'
alias ls 'ls --color=auto'
alias grep 'grep --color=auto'


